version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: dylan-postgres
    environment:
      POSTGRES_DB: dylan_cafe_ordering
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for job queue
  redis:
    image: redis:7-alpine
    container_name: dylan-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Express Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dylan-backend
    environment:
      PORT: 3001
      DATABASE_URL: postgresql://postgres:password@postgres:5432/dylan_cafe_ordering
      REDIS_URL: redis://redis:6379
      NODE_ENV: development
      CORS_ORIGIN: http://localhost:5173
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev

  # Printer Service Worker
  printer-service:
    build:
      context: ./printer-service
      dockerfile: Dockerfile
    container_name: dylan-printer
    environment:
      REDIS_URL: redis://redis:6379
      NODE_ENV: development
      PRINTER_TYPE: mock
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./printer-service:/app
      - /app/node_modules
    command: npm run dev

  # React PWA Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: dylan-frontend
    environment:
      VITE_API_URL: http://localhost:3001
      VITE_SOCKET_URL: http://localhost:3001
    ports:
      - "5173:5173"
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: dylan-network